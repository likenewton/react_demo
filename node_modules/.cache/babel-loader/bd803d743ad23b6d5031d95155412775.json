{"ast":null,"code":"var _jsxFileName = \"/Applications/Newton/web/react-demo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // 折叠按钮，展开与隐藏\n\nfunction Btn(props) {\n  let dom = props.isCollapse ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn\",\n    onClick: () => props.onClick(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, \"more\") : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn\",\n    onClick: () => props.onClick(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"collapse\");\n  return dom;\n}\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const cssStyles = {\n        fontSize: '14px',\n        fontWeight: '400',\n        lineHeight: '24px'\n      };\n      this.isElementCollision(this.state.comments, 3, cssStyles).then(isShowBtn => {\n        this.setState({\n          isShowBtn: isShowBtn\n        });\n\n        if (isShowBtn) {\n          // 如果是折叠的\n          this.setState({\n            comments: this.state.comments.slice(0, this.state.comments.length - 10) + '...'\n          });\n        }\n      });\n      window.addEventListener('resize', () => {\n        this.isElementCollision(this.state.comments, 3, cssStyles).then(isShowBtn => {\n          this.setState({\n            isShowBtn: isShowBtn\n          });\n        });\n      });\n    };\n\n    this.state = {\n      isShowBtn: true,\n      isCollapse: true,\n      comments: props.comments\n    };\n  }\n\n  render() {\n    const {\n      isShowBtn,\n      isCollapse,\n      comments\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"00:00:00\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"grey ellipsis text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Watch a free video course on Vue Mastery\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"1mins ago\"))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: 'info',\n      className: \"info clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, comments, isShowBtn ? /*#__PURE__*/React.createElement(Btn, {\n      isCollapse: isCollapse,\n      onClick: bool => {\n        this.hanlderBtn(bool);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }) : ''));\n  }\n\n  hanlderBtn(bool) {\n    this.setState({\n      isCollapse: bool\n    });\n  } // 判断文本超出行数\n\n\n  isElementCollision(text, rowCount = 4, cssStyles, offset = 0) {\n    let clonedNode = document.createElement('span');\n    clonedNode.innerHTML = text; // 给clone的dom增加样式\n\n    clonedNode.style.overflow = 'visible';\n    clonedNode.style.display = 'inline-block';\n    clonedNode.style.width = 'auto';\n    clonedNode.style.height = '0';\n    clonedNode.style.whiteSpace = 'nowrap';\n    clonedNode.style.visibility = 'hidden'; // 将传入的css字体样式赋值\n\n    if (cssStyles) {\n      Object.keys(cssStyles).forEach(item => {\n        clonedNode.style[item] = cssStyles[item];\n      });\n    } // 给clone的dom增加id属性\n\n\n    let _time = new Date().getTime();\n\n    const containerID = 'collision_node_id_' + _time;\n    clonedNode.setAttribute('id', containerID);\n    let tmpNode = document.getElementById(containerID);\n    let newNode = clonedNode;\n\n    if (tmpNode) {\n      document.body.replaceChild(clonedNode, tmpNode);\n    } else {\n      newNode = document.body.appendChild(clonedNode);\n    } // 新增的dom宽度与原dom的宽度*限制行数做对比\n\n\n    const differ = newNode.offsetWidth - this.refs['info'].offsetWidth * rowCount - 30 - offset;\n    console.log('differ', differ);\n    document.body.removeChild(newNode);\n    return new Promise(resolve => {\n      resolve(differ > 0);\n    });\n  }\n\n}\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [{\n        name: 'Newton',\n        comments: 'iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii'\n      }]\n    };\n  }\n\n  render() {\n    const {\n      list\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, list.map((item, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        name: item.name,\n        comments: item.comments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 18\n        }\n      });\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Comments, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Applications/Newton/web/react-demo/src/index.js"],"names":["React","ReactDOM","Btn","props","dom","isCollapse","onClick","Card","Component","constructor","componentDidMount","cssStyles","fontSize","fontWeight","lineHeight","isElementCollision","state","comments","then","isShowBtn","setState","slice","length","window","addEventListener","render","name","bool","hanlderBtn","text","rowCount","offset","clonedNode","document","createElement","innerHTML","style","overflow","display","width","height","whiteSpace","visibility","Object","keys","forEach","item","_time","Date","getTime","containerID","setAttribute","tmpNode","getElementById","newNode","body","replaceChild","appendChild","differ","offsetWidth","refs","console","log","removeChild","Promise","resolve","Comments","list","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAIC,GAAG,GAAGD,KAAK,CAACE,UAAN,gBACR;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACG,OAAN,CAAc,KAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAER;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,OAAO,EAAE,MAAMH,KAAK,CAACG,OAAN,CAAc,IAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAGA,SACEF,GADF;AAGD;;AAED,MAAMG,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyCnBO,iBAzCmB,GAyCC,MAAM;AACxB,YAAMC,SAAS,GAAG;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE,KAAhC;AAAuCC,QAAAA,UAAU,EAAE;AAAnD,OAAlB;AACA,WAAKC,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,QAAnC,EAA6C,CAA7C,EAAgDN,SAAhD,EAA2DO,IAA3D,CAAiEC,SAAD,IAAe;AAC7E,aAAKC,QAAL,CAAc;AACZD,UAAAA,SAAS,EAAEA;AADC,SAAd;;AAGA,YAAIA,SAAJ,EAAe;AACb;AACA,eAAKC,QAAL,CAAc;AACZH,YAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBI,KAApB,CAA0B,CAA1B,EAA6B,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAApB,GAA6B,EAA1D,IAAgE;AAD9D,WAAd;AAGD;AACF,OAVD;AAWAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtC,aAAKT,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,QAAnC,EAA6C,CAA7C,EAAgDN,SAAhD,EAA2DO,IAA3D,CAAiEC,SAAD,IAAe;AAC7E,eAAKC,QAAL,CAAc;AACZD,YAAAA,SAAS,EAAEA;AADC,WAAd;AAGD,SAJD;AAKD,OAND;AAOD,KA7DkB;;AAEjB,SAAKH,KAAL,GAAa;AACXG,MAAAA,SAAS,EAAE,IADA;AAEXd,MAAAA,UAAU,EAAE,IAFD;AAGXY,MAAAA,QAAQ,EAAEd,KAAK,CAACc;AAHL,KAAb;AAKD;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,SAAF;AAAad,MAAAA,UAAb;AAAyBY,MAAAA;AAAzB,QAAsC,KAAKD,KAAjD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,eAGE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHF,CADA,eAMA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKb,KAAL,CAAWuB,IAAjB,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAJF,CANA,eAeA;AAAK,MAAA,GAAG,EAAE,MAAV;AAAkB,MAAA,SAAS,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,QADH,EAGIE,SAAS,gBACT,oBAAC,GAAD;AACE,MAAA,UAAU,EAAEd,UADd;AAEE,MAAA,OAAO,EAAGsB,IAAD,IAAU;AAAC,aAAKC,UAAL,CAAgBD,IAAhB;AAAsB,OAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,GAIJ,EAPT,CAfA,CADF;AA4BD;;AAyBDC,EAAAA,UAAU,CAACD,IAAD,EAAO;AACf,SAAKP,QAAL,CAAc;AACZf,MAAAA,UAAU,EAAEsB;AADA,KAAd;AAGD,GArEgC,CAuEjC;;;AACAZ,EAAAA,kBAAkB,CAACc,IAAD,EAAOC,QAAQ,GAAG,CAAlB,EAAqBnB,SAArB,EAAgCoB,MAAM,GAAG,CAAzC,EAA4C;AAC5D,QAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAjB;AACAF,IAAAA,UAAU,CAACG,SAAX,GAAuBN,IAAvB,CAF4D,CAG5D;;AACAG,IAAAA,UAAU,CAACI,KAAX,CAAiBC,QAAjB,GAA4B,SAA5B;AACAL,IAAAA,UAAU,CAACI,KAAX,CAAiBE,OAAjB,GAA2B,cAA3B;AACAN,IAAAA,UAAU,CAACI,KAAX,CAAiBG,KAAjB,GAAyB,MAAzB;AACAP,IAAAA,UAAU,CAACI,KAAX,CAAiBI,MAAjB,GAA0B,GAA1B;AACAR,IAAAA,UAAU,CAACI,KAAX,CAAiBK,UAAjB,GAA8B,QAA9B;AACAT,IAAAA,UAAU,CAACI,KAAX,CAAiBM,UAAjB,GAA8B,QAA9B,CAT4D,CAU5D;;AACA,QAAI/B,SAAJ,EAAe;AACbgC,MAAAA,MAAM,CAACC,IAAP,CAAYjC,SAAZ,EAAuBkC,OAAvB,CAA+BC,IAAI,IAAI;AACrCd,QAAAA,UAAU,CAACI,KAAX,CAAiBU,IAAjB,IAAyBnC,SAAS,CAACmC,IAAD,CAAlC;AACD,OAFD;AAGD,KAf2D,CAiB5D;;;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AAEA,UAAMC,WAAW,GAAG,uBAAuBH,KAA3C;AACAf,IAAAA,UAAU,CAACmB,YAAX,CAAwB,IAAxB,EAA8BD,WAA9B;AAEA,QAAIE,OAAO,GAAGnB,QAAQ,CAACoB,cAAT,CAAwBH,WAAxB,CAAd;AACA,QAAII,OAAO,GAAGtB,UAAd;;AACA,QAAIoB,OAAJ,EAAa;AACXnB,MAAAA,QAAQ,CAACsB,IAAT,CAAcC,YAAd,CAA2BxB,UAA3B,EAAuCoB,OAAvC;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,GAAGrB,QAAQ,CAACsB,IAAT,CAAcE,WAAd,CAA0BzB,UAA1B,CAAV;AACD,KA7B2D,CA8B5D;;;AACA,UAAM0B,MAAM,GAAGJ,OAAO,CAACK,WAAR,GAAsB,KAAKC,IAAL,CAAU,MAAV,EAAkBD,WAAlB,GAAgC7B,QAAtD,GAAiE,EAAjE,GAAsEC,MAArF;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACAzB,IAAAA,QAAQ,CAACsB,IAAT,CAAcQ,WAAd,CAA0BT,OAA1B;AACA,WAAO,IAAIU,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,MAAAA,OAAO,CAACP,MAAM,GAAG,CAAV,CAAP;AACD,KAFM,CAAP;AAGD;;AA7GgC;;AAiHnC,MAAMQ,QAAN,SAAuBlE,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAa;AACXmD,MAAAA,IAAI,EAAE,CAAC;AACLzC,QAAAA,IAAI,EAAE,QADD;AAELT,QAAAA,QAAQ,EAAE;AAFL,OAAD;AADK,KAAb;AAMD;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE0C,MAAAA;AAAF,QAAW,KAAKnD,KAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEmD,IAAI,CAACC,GAAL,CAAS,CAACtB,IAAD,EAAOuB,CAAP,KAAa;AACpB,0BAAO,oBAAC,IAAD;AACL,QAAA,GAAG,EAAEA,CADA;AAEL,QAAA,IAAI,EAAEvB,IAAI,CAACpB,IAFN;AAGL,QAAA,QAAQ,EAAEoB,IAAI,CAAC7B,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKD,KAND,CAFF,CADF;AAaD;;AA1BoC;;AA8BvChB,QAAQ,CAACwB,MAAT,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEQ,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// 折叠按钮，展开与隐藏\r\nfunction Btn(props) {\r\n  let dom = props.isCollapse ?\r\n    <span className=\"btn\" onClick={() => props.onClick(false)}>more</span> :\r\n    <span className=\"btn\" onClick={() => props.onClick(true)}>collapse</span>\r\n  return (\r\n    dom\r\n  )\r\n}\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isShowBtn: true,\r\n      isCollapse: true,\r\n      comments: props.comments,\r\n    }\r\n  }\r\n  render() {\r\n    const { isShowBtn, isCollapse, comments } = this.state\r\n\r\n    return (\r\n      <div className=\"comments-card\">\r\n      <div className=\"head\">\r\n        <span>00:00:00</span>\r\n        <span className=\"grey\">|</span>\r\n        <span className=\"grey ellipsis text\">Watch a free video course on Vue Mastery</span>\r\n      </div>\r\n      <div className=\"middle clearfix\">\r\n        <div className=\"left\">\r\n          <span className=\"avatar\"></span>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div>{this.props.name}</div>\r\n          <div className=\"grey\">1mins ago</div>\r\n        </div>\r\n      </div>\r\n      <div ref={'info'} className=\"info clearfix\">\r\n        {comments}\r\n        {\r\n          isShowBtn ? \r\n          <Btn \r\n            isCollapse={isCollapse} \r\n            onClick={(bool) => {this.hanlderBtn(bool)}}\r\n          /> : ''\r\n        }\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cssStyles = { fontSize: '14px', fontWeight: '400', lineHeight: '24px' };\r\n    this.isElementCollision(this.state.comments, 3, cssStyles).then((isShowBtn) => {\r\n      this.setState({\r\n        isShowBtn: isShowBtn\r\n      })\r\n      if (isShowBtn) {\r\n        // 如果是折叠的\r\n        this.setState({\r\n          comments: this.state.comments.slice(0, this.state.comments.length - 10) + '...'\r\n        })\r\n      }\r\n    })\r\n    window.addEventListener('resize', () => {\r\n      this.isElementCollision(this.state.comments, 3, cssStyles).then((isShowBtn) => {\r\n        this.setState({\r\n          isShowBtn: isShowBtn\r\n        });\r\n      })\r\n    })\r\n  };\r\n\r\n\r\n  hanlderBtn(bool) {\r\n    this.setState({\r\n      isCollapse: bool\r\n    })\r\n  }\r\n\r\n  // 判断文本超出行数\r\n  isElementCollision(text, rowCount = 4, cssStyles, offset = 0) {\r\n    let clonedNode = document.createElement('span')\r\n    clonedNode.innerHTML = text\r\n    // 给clone的dom增加样式\r\n    clonedNode.style.overflow = 'visible';\r\n    clonedNode.style.display = 'inline-block';\r\n    clonedNode.style.width = 'auto';\r\n    clonedNode.style.height = '0';\r\n    clonedNode.style.whiteSpace = 'nowrap';\r\n    clonedNode.style.visibility = 'hidden';\r\n    // 将传入的css字体样式赋值\r\n    if (cssStyles) {\r\n      Object.keys(cssStyles).forEach(item => {\r\n        clonedNode.style[item] = cssStyles[item];\r\n      });\r\n    }\r\n\r\n    // 给clone的dom增加id属性\r\n    let _time = new Date().getTime();\r\n\r\n    const containerID = 'collision_node_id_' + _time;\r\n    clonedNode.setAttribute('id', containerID);\r\n\r\n    let tmpNode = document.getElementById(containerID);\r\n    let newNode = clonedNode;\r\n    if (tmpNode) {\r\n      document.body.replaceChild(clonedNode, tmpNode);\r\n    } else {\r\n      newNode = document.body.appendChild(clonedNode);\r\n    }\r\n    // 新增的dom宽度与原dom的宽度*限制行数做对比\r\n    const differ = newNode.offsetWidth - this.refs['info'].offsetWidth * rowCount - 30 - offset;\r\n    console.log('differ', differ)\r\n    document.body.removeChild(newNode);\r\n    return new Promise((resolve) => {\r\n      resolve(differ > 0)\r\n    })\r\n  }\r\n\r\n}\r\n\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      list: [{\r\n        name: 'Newton',\r\n        comments: 'iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii'\r\n      }],\r\n    }\r\n  }\r\n  render() {\r\n    const { list } = this.state\r\n\r\n    return (\r\n      <div className=\"comments\">\r\n      {\r\n        list.map((item, i) => {\r\n          return <Card\r\n            key={i}\r\n            name={item.name}\r\n            comments={item.comments}\r\n          />\r\n        })\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <Comments />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}