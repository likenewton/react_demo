{"ast":null,"code":"var _jsxFileName = \"/Applications/Newton/web/react-demo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // 折叠按钮，展开与隐藏\n\nfunction Btn(props) {\n  let dom = props.isCollapse ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn\",\n    onClick: () => props.onClick(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, \"more\") : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn\",\n    onClick: () => props.onClick(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"collapse\");\n  return dom;\n}\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const cssStyles = {\n        fontSize: '14px',\n        fontWeight: '400',\n        lineHeight: '24px'\n      };\n      let isShowBtn = this.isElementCollision(this.refs['info'], 3, cssStyles, true);\n      this.setState({\n        isShowBtn: isShowBtn\n      });\n    };\n\n    this.state = {\n      isShowBtn: true,\n      isCollapse: true\n    };\n  }\n\n  render() {\n    const {\n      isShowBtn,\n      isCollapse\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"00:00:00\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"grey ellipsis text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Watch a free video course on Vue Mastery\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"1mins ago\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info clearfix\",\n      ref: 'info',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, this.props.comments, isShowBtn ? /*#__PURE__*/React.createElement(Btn, {\n      isCollapse: isCollapse,\n      onClick: bool => {\n        this.hanlderBtn(bool);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }) : ''));\n  }\n\n  hanlderBtn(bool) {\n    this.setState({\n      isCollapse: bool\n    });\n  } // 判断文本超出行数\n\n\n  isElementCollision(ele, rowCount = 4, cssStyles, removeChild) {\n    if (!ele) {\n      return false;\n    }\n\n    const clonedNode = ele.cloneNode(true); // 给clone的dom增加样式\n\n    clonedNode.style.overflow = 'visible';\n    clonedNode.style.display = 'inline-block';\n    clonedNode.style.width = 'auto';\n    clonedNode.style.whiteSpace = 'nowrap';\n    clonedNode.style.visibility = 'hidden'; // 将传入的css字体样式赋值\n\n    if (cssStyles) {\n      Object.keys(cssStyles).forEach(item => {\n        clonedNode.style[item] = cssStyles[item];\n      });\n    } // 给clone的dom增加id属性\n\n\n    let _time = new Date().getTime();\n\n    const containerID = 'collision_node_id_' + _time;\n    clonedNode.setAttribute('id', containerID);\n    let tmpNode = document.getElementById(containerID);\n    let newNode = clonedNode;\n\n    if (tmpNode) {\n      document.body.replaceChild(clonedNode, tmpNode);\n    } else {\n      newNode = document.body.appendChild(clonedNode);\n    } // 新增的dom宽度与原dom的宽度*限制行数做对比\n\n\n    const differ = newNode.offsetWidth - ele.offsetWidth * rowCount + 40;\n\n    if (removeChild) {\n      document.body.removeChild(newNode);\n    }\n\n    return differ > 0;\n  }\n\n}\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [{\n        name: 'Newton',\n        comments: 'The official guide assumes intermediate level knowledge of HTML, CSS, and JavaScript. If you are totally new to frontend development, it might not be the best idea to jump right into a framework as your first step - grasp the basics then come back! Prior experience with other frameworks helps, but is not required.'\n      }]\n    };\n  }\n\n  render() {\n    const {\n      list\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, list.map((item, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        name: item.name,\n        comments: item.comments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 18\n        }\n      });\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Comments, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Applications/Newton/web/react-demo/src/index.js"],"names":["React","ReactDOM","Btn","props","dom","isCollapse","onClick","Card","Component","constructor","componentDidMount","cssStyles","fontSize","fontWeight","lineHeight","isShowBtn","isElementCollision","refs","setState","state","render","name","comments","bool","hanlderBtn","ele","rowCount","removeChild","clonedNode","cloneNode","style","overflow","display","width","whiteSpace","visibility","Object","keys","forEach","item","_time","Date","getTime","containerID","setAttribute","tmpNode","document","getElementById","newNode","body","replaceChild","appendChild","differ","offsetWidth","Comments","list","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// 折叠按钮，展开与隐藏\r\nfunction Btn(props) {\r\n  let dom = props.isCollapse ?\r\n    <span className=\"btn\" onClick={() => props.onClick(false)}>more</span> :\r\n    <span className=\"btn\" onClick={() => props.onClick(true)}>collapse</span>\r\n  return (\r\n    dom\r\n  )\r\n}\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isShowBtn: true,\r\n      isCollapse: true\r\n    }\r\n  }\r\n  render() {\r\n    const { isShowBtn, isCollapse } = this.state\r\n\r\n    return (\r\n      <div className=\"comments-card\">\r\n      <div className=\"head\">\r\n        <span>00:00:00</span>\r\n        <span className=\"grey\">|</span>\r\n        <span className=\"grey ellipsis text\">Watch a free video course on Vue Mastery</span>\r\n      </div>\r\n      <div className=\"middle clearfix\">\r\n        <div className=\"left\">\r\n          <span className=\"avatar\"></span>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div>{this.props.name}</div>\r\n          <div className=\"grey\">1mins ago</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"info clearfix\" ref={'info'}>\r\n        {this.props.comments}\r\n        {\r\n          isShowBtn ? \r\n          <Btn \r\n            isCollapse={isCollapse} \r\n            onClick={(bool) => {this.hanlderBtn(bool)}}\r\n          /> : ''\r\n        }\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cssStyles = { fontSize: '14px', fontWeight: '400', lineHeight: '24px' };\r\n    let isShowBtn = this.isElementCollision(this.refs['info'], 3, cssStyles, true);\r\n    this.setState({\r\n      isShowBtn: isShowBtn\r\n    });\r\n  };\r\n\r\n  hanlderBtn(bool) {\r\n    this.setState({\r\n      isCollapse: bool\r\n    })\r\n  }\r\n\r\n  // 判断文本超出行数\r\n  isElementCollision(ele, rowCount = 4, cssStyles, removeChild) {\r\n\r\n    if (!ele) {\r\n      return false;\r\n    }\r\n\r\n    const clonedNode = ele.cloneNode(true);\r\n    // 给clone的dom增加样式\r\n    clonedNode.style.overflow = 'visible';\r\n    clonedNode.style.display = 'inline-block';\r\n    clonedNode.style.width = 'auto';\r\n    clonedNode.style.whiteSpace = 'nowrap';\r\n    clonedNode.style.visibility = 'hidden';\r\n    // 将传入的css字体样式赋值\r\n    if (cssStyles) {\r\n      Object.keys(cssStyles).forEach(item => {\r\n        clonedNode.style[item] = cssStyles[item];\r\n      });\r\n    }\r\n\r\n    // 给clone的dom增加id属性\r\n    let _time = new Date().getTime();\r\n\r\n    const containerID = 'collision_node_id_' + _time;\r\n    clonedNode.setAttribute('id', containerID);\r\n\r\n    let tmpNode = document.getElementById(containerID);\r\n    let newNode = clonedNode;\r\n    if (tmpNode) {\r\n      document.body.replaceChild(clonedNode, tmpNode);\r\n    } else {\r\n      newNode = document.body.appendChild(clonedNode);\r\n    }\r\n    // 新增的dom宽度与原dom的宽度*限制行数做对比\r\n    const differ = newNode.offsetWidth - ele.offsetWidth * rowCount + 40;\r\n    if (removeChild) {\r\n      document.body.removeChild(newNode);\r\n    }\r\n    return differ > 0;\r\n  }\r\n\r\n}\r\n\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      list: [{\r\n        name: 'Newton',\r\n        comments: 'The official guide assumes intermediate level knowledge of HTML, CSS, and JavaScript. If you are totally new to frontend development, it might not be the best idea to jump right into a framework as your first step - grasp the basics then come back! Prior experience with other frameworks helps, but is not required.'\r\n      }],\r\n    }\r\n  }\r\n  render() {\r\n    const { list } = this.state\r\n\r\n    return (\r\n      <div className=\"comments\">\r\n      {\r\n        list.map((item, i) => {\r\n          return <Card\r\n            key={i}\r\n            name={item.name}\r\n            comments={item.comments}\r\n          />\r\n        })\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <Comments />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}